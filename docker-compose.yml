version: '3.8'

services:
  # Backend API 서버
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./backend/src:/app/src
    networks:
      - web-security-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend (Nginx로 정적 파일 서빙)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - backend
    networks:
      - web-security-network
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
    restart: unless-stopped

  # 개발용 WebAssembly 빌더 (개발 시에만 사용)
  wasm-builder:
    image: golang:1.19-alpine
    working_dir: /workspace
    volumes:
      - ./frontend/crypto-wasm:/workspace
    command: >
      sh -c "
        apk add --no-cache bash &&
        chmod +x build.sh &&
        ./build.sh
      "
    profiles:
      - dev
    networks:
      - web-security-network

  # 개발용 pnpm 서비스 (선택사항)
  pnpm-dev:
    image: node:18-alpine
    working_dir: /workspace
    volumes:
      - .:/workspace
    command: >
      sh -c "
        npm install -g pnpm@8 &&
        pnpm install &&
        pnpm dev
      "
    ports:
      - "3001:3000"
      - "8001:8000"
    profiles:
      - pnpm-dev
    networks:
      - web-security-network

networks:
  web-security-network:
    driver: bridge

volumes:
  backend_node_modules:
  frontend_node_modules: 